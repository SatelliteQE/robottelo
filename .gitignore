# See https://help.github.com/articles/ignoring-files/ for more about ignoring
# files. If you find yourself ignoring temporary files generated by your text
# editor or operating system, you probably want to add a global ignore instead.
# For example:
#
#     git config --global core.excludesfile ~/.gitignore_global
#     echo *.swp >> ~/.gitignore_global
#

# Ignore dynaconfs .env file
/.env

# Compiled python code.
*.pyc

# Distribution / packaging
/robottelo.egg-info
/build/
/dist/
.eggs/
.robottelo/

# Test results.
**/foreman-results.xml
**/robottelo*.log
logs/**
**/test-*.pstats
/.tox
/.coverage
/htmlcov/
/robottelo_collection.log

# broker local files
/broker_settings.yaml
/inventory.yaml

# manifester local files
/manifester_inventory.yaml
/manifester_settings.yaml
/manifests/

# Files generated by Sphinx.
/docs/_build/

# `entities.svg` is generated by `make graph-entities`, and pstats files can be
# converted to SVG graphs.
/*.svg

# For Eclipse.
/.metadata/
/.project
/.pydevproject
/.settings/

# For Pycharm
/.idea

# For VS Code
/.vscode/

# For backup files.
*~

.pytest_cache/
tests/foreman/pytest.ini

# For pytest --bz-cache generated file
**/bz_cache.json

**/settings_cache-*.json

# For `coverage xml` generated file.
**/coverage.xml

# Dynaconf local files
/.secrets.yaml
/.secrets_*.yaml
/settings.local.yaml
/settings*.local.yaml
/conf/*.yaml
/conf/*.conf
!/conf/supportability.yaml

# I don't know where those 2 files come from
# but they are always there.
full_upgrade
upgrade_highlights

#Robottelo artifact
screenshots/
tmp/

# Virtual Environments
ven*/

# pytest-fixture-tools artifacts
artifacts/

# pyvcloud artifacts
# workaround till https://github.com/vmware/pyvcloud/pull/766 is merged and released
**vcd_sdk.log
