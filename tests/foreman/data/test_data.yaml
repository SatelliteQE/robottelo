config:
  populators:
    api:
      module: robottelo.populate.api.APIPopulator
    cli:
      module: robottelo.populate.cli.CLIPopulator

vars:
  admin_username: admin
  admin_password: changeme
  org_list:
    - company7
    - company8

actions:

  - model: Organization
    register: default_orgs
    via: api
    data:
      name: Org{{item}}
      label: Org{{item}}
    with_items: org_list
    validate_fields:
      name: Org{{item}}
      label: Org{{item}}
#
#  - model: User
#    register: default_users
#    data:
#      firstname: user{{item}}
#      login: user{{item}}
#      mail: user{{item}}@acme.com
#      password: "123456"
#      organization:
#          from_registry: default_orgs
#      default_organization:
#          from_registry: default_orgs[loop_index]
#    with_items:
#      - user7
#      - user8
#
#  - model: User
#    register: my_user
#    data:
#      firstname: Bruno
#      login: bruno
#      mail: bruno@rocha.com
#      password: "123456"
#      organization:
#        from_search:
#          model: Organization
#          all: true
#          options:
#            per_page: 40
#          # filters: {}
#          register: bruno_orgs
#      default_organization:
#        from_search:
#          model: Organization
#          data:
#            name: Orgcompany5
#
#  - model: Product
#    data:
#      name: prodtest
#      organization:
#        from_registry: default_orgs[0]


# TODO
#  - model: Repository
#    data:
#      url:
#        from_object: robottelo.constants.FAKE_REPO_1
#      thing: "{{ fauxfactory.gen_string() }}"
#      # Save last generated strings in a file
#      # for validation.

#      organization:
#        from_search:
#          model: Organization
#          data:
#            name: Orgcompany7
#          all: true
#          silent_errors: true

#      product:
#        from_search:
#          model: Product
#          data:
#            organization:
#              from_registry: default_orgs[0]
#          all: false  # default



#  - action: update
#    model: Organization
#      data:
#        name: org_bla
#        value: default_orgs[1]


  - action: register
    data:
      name: Bruno
      email: rochacbruno@gmail.com

  - action: register
    data:
       organization_bla:
         from_registry: default_orgs[0]
       organization_5:
         from_search:
           model: Organization
           data:
             name: Orgcompany5

  - action: unregister
    data:
      - name
      - email
