# CI stages to execute against all branches on PR merge
name: auto_cherry_pick_commits

on:
  pull_request_target:
    types:
      - closed

jobs:
  previous-branch:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'CherryPick')
    name: Calculate previous branch name
    runs-on: ubuntu-latest
    outputs:
      previous_branch: ${{ steps.set-branch.outputs.previous_branch }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: set-branch
        run: echo "previous_branch=$(if [ $GITHUB_BASE_REF  == 'master' ]; then echo $(git branch -rl 'origin/6.*.z' --format='%(refname:lstrip=-1)' | sort --version-sort | tail -n1); else echo '6.'$(($(echo $GITHUB_BASE_REF | cut -d. -f2) - 1))'.z'; fi)" >> $GITHUB_OUTPUT

  find-the-parent-prt-comment:
    name: Find & Save last PRT comment of Parent PR
    runs-on: ubuntu-latest
    outputs:
      prt_comment: ${{steps.fc.outputs.comment-body}}
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: "trigger: test-robottelo"
          direction: last

  auto-cherry-pick:
    name: Auto Cherry Pick to previous branch
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'CherryPick')
    needs: previous-branch
    runs-on: ubuntu-latest
    env:
      PR_AUTHOR: ${{ github.event.pull_request.user.login }}
      TO_BRANCH: ${{ needs.previous-branch.outputs.previous_branch }}
    outputs:
      pr_number: ${{steps.issue.outputs.number}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cherry pick into ${{ env.TO_BRANCH }}
        uses: jyejare/github-cherry-pick-action@main
        id: issue
        with:
          author: ${{ env.PR_AUTHOR }} <${{ env.PR_AUTHOR }}@users.noreply.github.com>
          token: ${{ secrets.CHERRYPICK_PAT }}
          branch: ${{ env.TO_BRANCH }}
          labels: |
            Auto_Cherry_Picked
            ${{ env.TO_BRANCH }}
          assignees: "${{ github.event.pull_request.assignee.login }}"

  add-parent-prt-comment:
    name: Add Parent PR's PRT comment to Auto_Cherry_Picked PR's
    runs-on: ubuntu-latest
    needs: [ auto-cherry-pick, find-the-parent-prt-comment ]
    steps:
      - uses: mshick/add-pr-comment@v2
        with:
          issue: ${{ needs.auto-cherry-pick.outputs.pr_number }}
          message: ${{needs.find-the-parent-prt-comment.outputs.prt_comment}}

  create-issue:
    name: Create Github issue on cherrypick failure
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'failure') }}
    needs: [previous-branch, auto-cherry-pick]
    env:
      TO_BRANCH: ${{ needs.previous-branch.outputs.previous_branch }}
    outputs:
      issue_url: ${{steps.create_issue.outputs.html_url}}
    steps:
      - uses: dacbd/create-issue-action@main
        id: create_issue
        with:
          token: ${{ secrets.CHERRYPICK_PAT }}
          title: "[Failed-AutoCherryPick] - ${{ github.event.pull_request.title }}"
          body: |
            #### Auto-Cherry-Pick WorkFlow Failure:
            - To Branch: ${{ env.TO_BRANCH }}
            - [Failed Cherrypick Action](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - [Parent Pull Request](https://github.com/${{ github.repository }}/pull/${{ github.event.number }})
          labels: Failed_AutoCherryPick,${{ env.TO_BRANCH }}
          assignees: "${{ github.event.pull_request.assignee.login }}"

  google-chat-notification:
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.auto-cherry-pick.result, ','), 'failure') }}
    needs: [auto-cherry-pick, create-issue]
    steps:
      - name: Google Chat Notification - Robottelo
        uses: omkarkhatavkar/google-chat-notification@main
        with:
          name: "${{ github.event.pull_request.title }}"
          url: ${{ secrets.GCHAT_REVIEWERS_WEBHOOK }}
          issue_url: ${{ needs.create-issue.outputs.issue_url }}
          status: failure
